I’ve added a new GET /​license endpoint that takes a `repo` query parameter (`owner/repo`), fetches the license via the GitHub API, and returns the license JSON (or an appropriate error). I also updated the dependencies and the README. Below is a summary of the changes:

---

### 1. Implemented the `/license` endpoint in **app/main.py**

```python
from fastapi import FastAPI
from fastapi import HTTPException, Query
import requests

app = FastAPI()

@app.get("/healthz")
def health():
    return {"status": "healthy"}

@app.get("/license")
def get_license(repo: str = Query(..., description="GitHub repository in the format 'owner/repo'")):
    """
    Retrieve the license information for a GitHub repository.
    """
    # parse and validate repo parameter
    parts = repo.split("/")
    if len(parts) != 2:
        raise HTTPException(status_code=400, detail="Invalid repo format. Use 'owner/repo'.")
    owner, name = parts
    url = f"https://api.github.com/repos/{owner}/{name}/license"
    resp = requests.get(url)
    if resp.status_code == 200:
        return resp.json()
    if resp.status_code == 404:
        raise HTTPException(status_code=404, detail="Repository or license not found.")
    raise HTTPException(status_code=resp.status_code, detail=resp.text)
```
【F:app/main.py†L2-L3】【F:app/main.py†L15-L31】

---

### 2. Added **requests** to **requirements.txt**

```text
fastapi
uvicorn
gunicorn
requests
```
【F:requirements.txt†L1-L4】

---

### 3. Documented the new endpoint in **README.md**

```markdown
- `GET /license?repo={owner}/{repo}` — Returns license information for the specified GitHub repository
```
【F:README.md†L23】

---

With these changes the service now exposes:

| Endpoint                        | Description                                                        |
|---------------------------------|--------------------------------------------------------------------|
| **GET /**                       | `{ "ok": True, "service": "fastapi-service" }`                      |
| **GET /healthz**                | `{ "status": "healthy" }`                                          |
| **GET /license?repo=owner/repo** | Fetches and returns the GitHub license JSON for the given repository |

You can install the new dependency and run the service as before:

```bash
pip install -r requirements.txt
uvicorn app.main:app --reload
```

Let me know if you need any further tweaks!